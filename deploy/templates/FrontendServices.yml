AWSTemplateFormatVersion: '2010-09-09'
Description: ServerlessPass services used by the frontend.
Parameters:
  ArtifactsBucketName:
    Description: Bucket to store artifacts for the frontend
    Type: String
  DomainName:
    Description: Domain name used to access the frontend
    Type: String
  DomainHostedZoneId:
    Description: Hosted zone id of domain used to access the frontend
    Type: String
  Stage:
    Description: Stage is used to deploy multiple instances of ServerlessPass
    Type: String
Resources:
  Alias:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "ServerlessPassFrontendServicesAlias${Stage}"
      Type: String
      Value: !Sub "ServerlessPass${Stage}"
  FrontendCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref DomainName
      DomainValidationOptions:
      - DomainName: !Ref DomainName
        HostedZoneId: !Ref DomainHostedZoneId
      ValidationMethod: DNS
  ArtifactsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Ref ArtifactsBucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  OriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub "${Alias.Value} identity"
  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ArtifactsBucket
      PolicyDocument:
        Statement:
        - Action: s3:GetObject
          Effect: Allow
          Resource: !Sub "${ArtifactsBucket.Arn}/*"
          Principal:
            AWS: !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${OriginAccessIdentity}"
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
        - !Ref DomainName
        CustomErrorResponses:
        - ErrorCode: 403
          ResponseCode: 200
          ResponsePagePath: /index.html
        DefaultCacheBehavior:
          AllowedMethods:
          - GET
          - HEAD
          CachedMethods:
          - GET
          - HEAD
          Compress: true
          DefaultTTL: 86400
          ForwardedValues:
            Cookies:
              Forward: none
            Headers: []
            QueryString: false
            QueryStringCacheKeys: []
          MaxTTL: 31536000
          MinTTL: 0
          TargetOriginId: BucketOrigin
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: false
        Origins:
        - DomainName: !Sub "${ArtifactsBucketName}.s3.amazonaws.com"
          Id: BucketOrigin
          S3OriginConfig:
            OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${OriginAccessIdentity}"
        PriceClass: PriceClass_100
        ViewerCertificate:
          AcmCertificateArn: !Ref FrontendCertificate
          MinimumProtocolVersion: TLSv1.2_2019
          SslSupportMethod: sni-only
  FrontendDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref DomainHostedZoneId
      Name: !Ref DomainName
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        EvaluateTargetHealth: false
        HostedZoneId: Z2FDTNDATAQYW2
      Type: A
  AuthenticationClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      AllowedOAuthFlows:
      - code
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
      - openid
      CallbackURLs:
      - !Sub https://${DomainName}
      ClientName: ServerlessPassFrontendClient
      ExplicitAuthFlows:
      - ALLOW_USER_PASSWORD_AUTH
      - ALLOW_REFRESH_TOKEN_AUTH
      GenerateSecret: false
      SupportedIdentityProviders:
      - COGNITO
      UserPoolId:
        Fn::ImportValue: !Sub "StaticsoftExternalUsers${Stage}UserPoolId"
      TokenValidityUnits:
        AccessToken: days
        IdToken: days
        RefreshToken: days
      RefreshTokenValidity: 3650
      AccessTokenValidity: 1
      IdTokenValidity: 1
Outputs:
  ArtifactsBucketName:
    Value: !Ref ArtifactsBucket
    Export:
      Name: !Sub "ServerlessPass${Stage}FrontendArtifactsBucketName"
  CloudFrontDistributionId:
    Value: !Ref CloudFrontDistribution
    Export:
      Name: !Sub "ServerlessPass${Stage}CloudFrontDistributionId"